service: booking-management-system

frameworkVersion: "3"

provider:
  name: aws
  runtime: nodejs18.x
  region: us-east-1
  environment:
    BOOKINGS_TABLE: booking-management-system-bookings
    UPLOAD_BUCKET: booking-management-system-uploads
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource: arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.BOOKINGS_TABLE}

functions:
  createBooking:
    handler: handler.createBooking
    timeout: 30
    events:
      - http:
          path: /bookings
          method: post
          cors: true

  getBookings:
    handler: handler.getBookings
    timeout: 30
    events:
      - http:
          path: /bookings
          method: get
          cors: true

  getBooking:
    handler: handler.getBookingById
    timeout: 30
    events:
      - http:
          path: /bookings/{id}
          method: get
          cors: true

  updateBooking:
    handler: handler.updateBooking
    timeout: 30
    events:
      - http:
          path: /bookings/{id}
          method: put
          cors: true

  deleteBooking:
    handler: handler.deleteBooking
    timeout: 30
    events:
      - http:
          path: /bookings/{id}
          method: delete
          cors: true

resources:
  Resources:
    BookingsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: booking-management-system-bookings
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
    UploadsBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: booking-management-system-uploads
